package com.erwo.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.dbgreen.bean.Father;
import com.example.dbgreen.bean.Son;
import com.example.dbgreen.bean.Customer;
import com.example.dbgreen.bean.CustomerWithOrder;
import com.example.dbgreen.bean.Order;

import com.erwo.greendao.gen.FatherDao;
import com.erwo.greendao.gen.SonDao;
import com.erwo.greendao.gen.CustomerDao;
import com.erwo.greendao.gen.CustomerWithOrderDao;
import com.erwo.greendao.gen.OrderDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig fatherDaoConfig;
    private final DaoConfig sonDaoConfig;
    private final DaoConfig customerDaoConfig;
    private final DaoConfig customerWithOrderDaoConfig;
    private final DaoConfig orderDaoConfig;

    private final FatherDao fatherDao;
    private final SonDao sonDao;
    private final CustomerDao customerDao;
    private final CustomerWithOrderDao customerWithOrderDao;
    private final OrderDao orderDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        fatherDaoConfig = daoConfigMap.get(FatherDao.class).clone();
        fatherDaoConfig.initIdentityScope(type);

        sonDaoConfig = daoConfigMap.get(SonDao.class).clone();
        sonDaoConfig.initIdentityScope(type);

        customerDaoConfig = daoConfigMap.get(CustomerDao.class).clone();
        customerDaoConfig.initIdentityScope(type);

        customerWithOrderDaoConfig = daoConfigMap.get(CustomerWithOrderDao.class).clone();
        customerWithOrderDaoConfig.initIdentityScope(type);

        orderDaoConfig = daoConfigMap.get(OrderDao.class).clone();
        orderDaoConfig.initIdentityScope(type);

        fatherDao = new FatherDao(fatherDaoConfig, this);
        sonDao = new SonDao(sonDaoConfig, this);
        customerDao = new CustomerDao(customerDaoConfig, this);
        customerWithOrderDao = new CustomerWithOrderDao(customerWithOrderDaoConfig, this);
        orderDao = new OrderDao(orderDaoConfig, this);

        registerDao(Father.class, fatherDao);
        registerDao(Son.class, sonDao);
        registerDao(Customer.class, customerDao);
        registerDao(CustomerWithOrder.class, customerWithOrderDao);
        registerDao(Order.class, orderDao);
    }
    
    public void clear() {
        fatherDaoConfig.clearIdentityScope();
        sonDaoConfig.clearIdentityScope();
        customerDaoConfig.clearIdentityScope();
        customerWithOrderDaoConfig.clearIdentityScope();
        orderDaoConfig.clearIdentityScope();
    }

    public FatherDao getFatherDao() {
        return fatherDao;
    }

    public SonDao getSonDao() {
        return sonDao;
    }

    public CustomerDao getCustomerDao() {
        return customerDao;
    }

    public CustomerWithOrderDao getCustomerWithOrderDao() {
        return customerWithOrderDao;
    }

    public OrderDao getOrderDao() {
        return orderDao;
    }

}
